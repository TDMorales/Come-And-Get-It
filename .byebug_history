continue
@item_count.each do | item, value | p " #{item} #{value}" end 
@item_count.each do | item, value | p  #{item} #{value}
@item_count.each do | item, value | p  #{item} #{value} end 
@item_count.each do | item, value | #{item} #{value} end 
@item_count.each do | i | i[0] end
@item_count.each do | i | i[0], i[1] 
@item_count.each do | i | i[0], i[1] end 
@item_count.each do | i | i end 
@item_count.each do | i | i.name end 
@item_count.each do | i | i.name, i[1]  end 
@item_count.each do | i | i.name, i[q]  end 
@item_count.each do | i | p i  end 
@item_count.each do | i | i.name end 
@item_count.each do | i, q | i.name, [q] end 
@item_count.each do | i, q | i.name
@item_count
continue
item_count
items.each do |i| item_count[i] += 1 end
items = @current_cart.orders.map { | o | o.menu_item.name }
item_count = Hash.new(0)
items.each do |i| item_count[i] += 1 end
items = @current_cart.orders.map { | o | o.menu_item.name }
item_count
item_names
@current_cart.orders.map { | o | o.menu_item.name }.each do | mitem.name | item_count[mitem] += 1
@current_cart.orders.map { | o | o.menu_item.name }.each do | mitem.name | item_count[mitem] += 1 end
@current_cart.orders.map { | o | o.menu_item.name }.each do | mitem | item_count[mitem] += 1 end
@current_cart.orders.map { | o | o.menu_item.name }.each do {| mitem | item_count[mitem] += 1} end
@current_cart.orders.map { | o | o.menu_item.name }
@current_cart.orders.map { | o | o.menu_item.name }.each {| mitem | item_count[mitem] += 1}
item_count = Hash.new()
@current_cart.orders.map { | o | o.menu_item.name }.count("Katsu Curry")
@current_cart.orders.map { | o | o.menu_item.name }.count(Katsu Curry)
@current_cart.orders.map { | o | o.menu_item.name }.count(item_names)
@current_cart.orders.map { | o | o.menu_item.name }.count(menu_item)
@current_cart.orders.map { | o | o.menu_item.name }.count
@current_cart.orders.map { | o | o.menu_item.name }.sum
item_names
item_names = @current_cart.orders.map { | o | o.menu_item.name }.uniq
@current_cart.orders.map { | o | o.menu_item.name }.uniq
@current_cart.orders.map { | o | o.menu_item.name }
@current_cart.orders.map { | o | o.menu_item }
@current_cart.orders.map { | o | o.menu_item_id }
@current_cart.orders.all.quantity
@current_cart.orders
@current_cart
@current_cart.orders
continue
exit
eix
continue
@current_cart.orders
@current_cart
continue
@user.carts.first.orders.map {| menu_item | menu_item.menu_item }.uniq
@user.carts.first.orders.map {| menu_item | menu_item.menu_item.uniq }
@user.carts.first.orders.map {| menu_item | menu_item.menu_item }
@user.carts.first.orders.map
@user.carts.first.orders.first
@user.carts.first.orders.menu_item.id
@user.carts.first.orders.menu_item_id
@user.carts.first.orders.all.menu_item
@user.carts.first.orders.menu_item
@user.carts.first.orders.uniq
@user.carts.first.orders
@user.carts.first.order
@user.carts.first
@user.carts.order
@user.carts.orders
@user.carts
continue
params
exit
@cart.orders.map { | order | order.menu_item}.uniq
continue
@cart.orders.map { | order | order.menu_item.name}.uniq
@cart.orders.map { | order | order.menu_item.name}
@cart.menu_items
@cart.orders.menu_items.id
@cart.orders.menu_items.id.name
@cart.orders.menu_items
@cart.orders
@cart = Cart.find_by(id: params[:format])
Cart.find_by(id: params[:format])
Cart.find_by(id: format[:id])
params
@cart_id
cart
@cart
continue
Cart.find_by(id: params[:id])
@user_id
cart
@cart_id
@cart
params
continue
exit
@user_id
@order_id
@order
@user_id
@user.id
@user
@user.orders
params
exit
@cart.orders.empty?
@cart.orders
@cart
@cart.any?
@cart.empty
@cart.empty?
@cart.orders.count
@cart.orders
@cart
exit
continue
@cart = (@user.carts.last =  nil)
@cart = (@user.carts.last = nil)
@user.carts.last
@cart = nil
@cart
@cart = @user.carts.last
@cart
cart
@user.carts.last
@user
@user.carts.last
@user
@cart
continue
@cart
continue
@cart == nil
@cart
exit
@cart
continue
@cart
exit
@cart
@cart = nil
@cart
@cart = @user.carts.last
@user.carts.last
@user.carts.last == Cart.find_by(user_id: session[:user_id])
@user.carts.last
@user.carts
@user
Cart.find_by(user_id: session[:user_id])
@cart
@user
continue
exit
@user.carts.last.id
@user.carts.first.id
@cart
@user.carts.first
@user.carts
@user
exit
@cart.id
@cart
@order.cart_id
@cart
@order
Order.find(params[:id])
@rder
continue
params
@rder
continue
@user
continue
@cart
@user
exit
@user
@cart
continue
User.find_by(id: session[:user_id])
session[:user_id]
params
@user
User.all[9]
User.all
User.all[7]
Cart.find_by(user_id: session[:user_id])
params
continue
@cart
continue
@cart
continue
continu
continue
@cart.orders
@orders
@order
@menuitem
@user
@cart
params
continue
params
@order
@order.errors.full_messages
@order.error.full_messages
exit
continue
@order
continue
@order
continue
@order
exit
@item = MenuItem.find_by(id: params[:id])
MenuItem.find_by(id: params[:id])
params
exit
@order
exit
@order
@ordr
exit
@order
continue
params
session[:item_id]
session[:item_id
@item
@order
continue
@order
@cart.order
continue
@user.carts.first.orders.map{|o| o.menu_item.price}.sum
continue 
continue
@user.carts.first.orders.map { | o | o.menu_item.price}.sum
@user.carts.first.orders.map { | o | o.menut_item.price}.sum
@user.carts.first.orders.map
@user.carts.first.orders
@user.carts.first
continue
@user.carts
continue
@order
params
exit
@order.errors.full_messages
session[:user_id]
session[:user_id].carts == nil
